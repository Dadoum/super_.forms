module super_.forms.drawing.drawingcontext;

interface DrawingContext {
    void flush();
    void newPath();
    void closePath();
    void newSubPath();
    void pathExtents(out float x1, out float y1, out float x2, out float y2);
    void currentPoint(out float x, out float y);
    void lineTo(float x, float y);
    void relLineTo(float dx, float dy);
    void moveTo(float x, float y);
    void relMoveTo(float x, float y);
    void arc(float xc, float yc, float radius, float a1, float a2);
    void arcNegative(float xc, float yc, float radius, float a1, float a2);
    void curveTo(float x1, float y1, float x2, float y2, float x3, float y3);
    void relCurveTo(float x1, float y1, float x2, float y2, float x3, float y3);
    void quadraticTo(float x1, float y1, float x2, float y2);
    void rectangle(float x, float y, float w, float h);
    void stroke();
    void strokePreserve();
    void fill();
    void fillPreserve();
    void paint();
    void clear();
    void reclip();
    void clip();
    void clipPreserve();
    void sourceColor(uint c);
    void sourceRgba(float r, float g, float b, float a);
    void sourceRgb(float r, float g, float b);
    void lineWidth(float width);
    //void lineCap(LineCap cap);
    //void lineJoin(LineJoin join);
    //void sourceSurface(Surface* surf, float x, float y);
    //void source(Pattern* pat);
    //void operator(Operator op);
    //void fillRule(FillRule fr);
    @property void dash(float[] dashes, float offset);
    @property float[] dash(out float offset);
    float lineWidth();
    //LineCap lineCap();
    //LineJoin lineJoin();
    //Operator operator();
    //FillRule fillRule();
    //Pattern* source();
    void save();
    void restore();
    void translate(float dx, float dy);
    void scale(float sx, float sy);
    void rotate(float radians);
    //void transform(const Matrix* matrix);
    //void matrix(const Matrix* matrix);
    //void matrix(const Matrix* matrix);
    void identityMatrix();
    void selectFontFace(string name);
    void selectFontPath(string path);
    @property void fontSize(uint size);
    void showText(string text);
    //void textExtents(string text, TextExtents* extents);
    //void fontExtents(TextExtents* extents);
    //Text* textRunCreate(string text);
}
